/* 
CREDIT EVERYTHING
*/

@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,500;0,600;1,400&display=swap");

body {
  background: #292929;
  font-family: "Montserrat", sans-serif;
  font-size: 16px;
  color: white;
  margin: 0;
}

.unique-button-class {
  margin-bottom: 30px;
}

h2,
h3,
div {
  text-shadow: 2px 0 0 rgba(0, 0, 0, 0.5), 0 2px 0 rgba(0, 0, 0, 0.5),
    -2px 0 0 rgba(0, 0, 0, 0.5), 0 -2px 0 rgba(0, 0, 0, 0.5);
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-fon-smoothing: grayscale;
}

/* Add a black background color to the top navigation */
.topnav {
  background-color: #333;
  overflow: hidden;
}

/* Style the links inside the navigation bar */
.topnav a {
  float: left;
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
}

/* Change the color of links on hover */
.topnav a:hover {
  background-color: #ddd;
  color: white;
}

/* Add a color to the active/current link */
.topnav a.active {
  background-color: #04AA6D;
  color: white;
}

:root {
  /*  BUTTON PARENT CONTAINER --> For demo. */
  --button-container-max-width: 600px;

  /*  BUTTON MAX WIDTH - % of parent container width or fixed pixels 
        Adjust other variable - i.e. width/height/font-size - so other shit fits. lol */
  --button-max-width: 100%;

  /*  BUTTON DEFAULT MIN-HEIGHT i.e."Mobile First" */
  --button-min-height: 65px;
  /*  BUTTON LARGE SCREEN MIN-HEIGHT Add additional breakpoints as needed. */
  --button-large-screen-min-height: 100px;
  /*  LEFT BUTTON PANEL DEFAULT WIDTH - i.e."Mobile First" */
  --button-div-width: 90px;
  /*  LEFT BUTTON PANEL LARGE SCREEN WIDTH */
  --button-div-large-screen-width: 163px;


  --button-text-font: Montserrat;
  --button-text-color: rgba(255, 255, 255, 1);
  /*  BUTTON BRIGHTNESS - Easier on the eyes */
  --button-brightness: 0.95;
  --button-border-color: rgba(255, 255, 255, 0.45);
  --button-border-width: 1px;
  --button-background-color: rgba(60, 59, 110, 1);
  --button-background-hover-color: rgba(178, 34, 52, 1);
  --button-background-active-color: rgba(137, 11, 25, 1);

  /*  LEFT BUTTON PANEL STYLES 
       The DIV in BUTTON HTML mark-up is the left button panel.
       The SPAN element is the overlay for the left panel. */

  --button-div-background-color: rgba(178, 34, 52, 1);
  --button-div-background-hover-color: rgba(60, 59, 110, 1);
  --button-div-border-color: rgba(255, 255, 255, 1);
  /*  RIGHT BORDER WIDTH OF DIV  
        Set to 0px for demo.  */
  --button-div-right-border-width: 0px;

  /*  LEFT BUTTON PANEL -- SPAN OVERLAY 
           SPAN background color set to transparent when animated */
  --button-span-background-color: rgba(0, 0, 0, 0.25);
}

/* BUTTON PARENT CONTAINER 
   Mark-Up for demo. */

.button-container {
  width: 100%;
  max-width: var(--button-container-max-width);
  margin: 0 auto;
}

/* BUTTON MARK-UP 
   Replace "unique-button-class" to whatever.  
   HINT: Search and replace. 
   Don't forget! - If you change the button class name in the CSS, 
   change the button class name in the HTML too.
   lol */

.unique-button-class {
  position: relative;
  width: 100%;
  max-width: var(--button-max-width);
  min-height: var(--button-min-height);
  margin: 0;
  border: 0;
  padding: 0;
  padding: 10px;
  border: var(--button-border-width) solid var(--button-border-color);
  padding-left: calc(var(--button-div-width) + 25px);
  background-color: var(--button-background-color);
  color: var(--button-font-color);
  filter: brightness(var(--button-brightness));
  text-align: left;
  overflow: hidden;
  cursor: pointer;
  transition: background-color 300ms ease;
}

.unique-button-class:hover {
  background-color: var(--button-background-hover-color);
}

/* BUTTON FOCUS AND ACTIVE STATES
   Disabled pointer events and brought down opacity
   on active button. */

.unique-button-class:focus,
.unique-button-class.active {
  background-color: var(--button-background-active-color);
  opacity: 0.9;
  pointer-events: none;
}

/* BUTTON MEDIA QUERY FOR LARGE SCREENS -->  AS NEEDED  */

@media only screen and (min-width: 980px) {
  .unique-button-class {
    min-height: var(--button-large-screen-min-height);
    padding-left: calc(var(--button-div-large-screen-width) + 25px);
  }
}

.unique-button-class div {
  width: var(--button-div-width);
  position: absolute;
  display: grid;
  justify-content: center;
  align-content: center;
  text-align: center;
  top: 0;
  left: 0;
  bottom: 0;
  height: 100%;
  background-color: var(--button-div-background-color);
  border-right: var(--button-div-right-border-width) solid var(--button-div-border-color);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

/* SPAN IN HTML IS AN OVERLAY FOR BACKGROUND IMAGE  */
.unique-button-class span {
  background: var(--button-span-background-color);
  width: 100%;
  height: 100%;
  position: absolute;
  display: grid;
  justify-content: center;
  align-content: center;
  text-align: center;
}

@media only screen and (min-width: 980px) {
  .unique-button-class div {
    width: var(--button-div-large-screen-width);
  }

  .unique-button-class span {
    font-size: 2vw;
  }
}

/* BUTTON DIV HOVER EFFECT
   This is the left panel  */

.unique-button-class:hover div,
.unique-button-class:focus div,
.unique-button-class.active div {
  background-color: var(--button-div-background-hover-color);
  transition: background-color 300ms ease;
}

/* BUTTON SPAN ANIMATED SPIN HOVER EFFECT
   This is the left panel with class "spin"  */

.unique-button-class.spin:hover div span,
.unique-button-class.spin:focus div span,
.unique-button-class.spin.active div span {
  animation: spin 3s infinite;
  background: transparent;
}

/* SPIN ANIMATION */
@keyframes spin {
  0% {
    transform: rotate3d(0, 0, 0, 0deg);
  }

  50% {
    transform: rotate3d(0, 1, 0, 360deg);
  }

  100% {
    transform: rotate3d(0, 0, 0, 0deg);
  }
}

/* BUTTON PRESS EFFECT
   Transform scale to create 
   a button press effect when clicked. */

.unique-button-class:active {
  transform: scale(0.98);
}

/* BUTTON TYPOGRAPHY  */
.unique-button-class div {
  font-size: 30px;
  letter-spacing: 2px;
}

.unique-button-class h2,
.unique-button-class h3 {
  line-height: 1;
  margin: 0;
  font-family: var(--button-text-font);
  color: var(--button-text-color);
}

.unique-button-class h2 {
  font-size: 16px;
  font-weight: 600;
  text-transform: uppercase;
  padding-bottom: 3px;
}

.unique-button-class h3 {
  font-size: 15px;
  font-weight: 400;
}

/* BUTTON TYPOGRAPHY MEDIA QUERY */

@media only screen and (min-width: 980px) {
  .unique-button-class h2 {
    font-size: calc(100% + 3 * (100vw - 1000px) / 1000);
    letter-spacing: 3px;
  }

  .unique-button-class h3 {
    font-size: calc(90% + 2 * (100vw - 1000px) / 1000);
    letter-spacing: 1px;
  }
}

/* https://codepen.io/statanasova/pen/AoEEdp */


#container {
  width: 100%;
  height: 300px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#keyboard {
  margin: 0;
  padding: 0;
  list-style: none;
}

#keyboard li {
  float: left;
  margin: 0 5px 5px 0;
  width: 60px;
  height: 60px;
  font-size: 24px;
  line-height: 60px;
  text-align: center;
  color: white;
  background: rgb(24, 26, 27);
  border: 1px solid rgb(24, 26, 27);

  -webkit-user-select: none;
  /* Safari */
  -ms-user-select: none;
  /* IE 10 and IE 11 */
  user-select: none;
  /* Standard syntax */

}

#container li {
  list-style: none;
  float: left;
}

.funk {
  /* https://codepen.io/bramus/pen/rNWByYz  */
  border-radius: 5px !important;
  border: 1px solid !important;
  border-image: conic-gradient(from var(--angle), red, yellow, lime, aqua, blue, magenta, red) 1 !important;
  animation: 1s rotate linear infinite !important;
}

@keyframes rotate {
  to {
    --angle: 360deg;
  }
}

/* unsupported by Firefox, Firefox for Android, Safari, Safari on iOS */
@property --angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

.capslock,
.tab,
.left-shift,
.clearl,
.switch {
  clear: left;
}

#keyboard .tab,
#keyboard .delete {
  width: 70px;
}

#keyboard .capslock {
  width: 80px;
}

#keyboard .return {
  width: 90px;
}

#keyboard .left-shift {
  width: 70px;
}

#keyboard .switch {
  width: 90px;
}

#keyboard .rightright-shift {
  width: 109px;
}

.lastitem {
  margin-right: 0;
}

.uppercase {
  text-transform: uppercase;
}

#keyboard .space {
  float: left;
  width: 556px;
}

#keyboard .switch,
#keyboard .space,
#keyboard .return {
  font-size: 16px;
}

.on {
  display: none;
}

#keyboard li:hover {
  position: relative;
  top: 1px;
  left: 1px;
  border-color: #e5e5e5;
  cursor: pointer;
}

.type--A {
  --line_color: #FFECF6;
  --back_color: #555555;
}

.type--B {
  --line_color: #fffb00;
  --back_color: #555555;
}

.type--C {
  --line_color: #ff0000;
  --back_color: #555555;
}

.button {
  position: relative;
  z-index: 0;
  width: 240px;
  height: 56px;
  text-decoration: none;
  font-size: 14px;
  font-weight: bold;
  color: var(--line_color);
  letter-spacing: 2px;
  transition: all .3s ease;
}

.button__text {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

.button::before,
.button::after,
.button__text::before,
.button__text::after {
  content: '';
  position: absolute;
  height: 3px;
  border-radius: 2px;
  background: var(--line_color);
  transition: all .5s ease;
}

.button::before {
  top: 0;
  left: 54px;
  width: calc(100% - 56px * 2 - 16px);
}

.button::after {
  top: 0;
  right: 54px;
  width: 8px;
}

.button__text::before {
  bottom: 0;
  right: 54px;
  width: calc(100% - 56px * 2 - 16px);
}

.button__text::after {
  bottom: 0;
  left: 54px;
  width: 8px;
}

.button__line {
  position: absolute;
  top: 0;
  width: 56px;
  height: 100%;
  overflow: hidden;
}

.button__line::before {
  content: '';
  position: absolute;
  top: 0;
  width: 150%;
  height: 100%;
  box-sizing: border-box;
  border-radius: 300px;
  border: solid 3px var(--line_color);
}

.button__line:nth-child(1),
.button__line:nth-child(1)::before {
  left: 0;
}

.button__line:nth-child(2),
.button__line:nth-child(2)::before {
  right: 0;
}

.button:hover {
  letter-spacing: 6px;
}

.button:hover::before,
.button:hover .button__text::before {
  width: 8px;
}

.button:hover::after,
.button:hover .button__text::after {
  width: calc(100% - 56px * 2 - 16px);
}

.button__drow1,
.button__drow2 {
  position: absolute;
  z-index: -1;
  border-radius: 16px;
  transform-origin: 16px 16px;
}

.button__drow1 {
  top: -16px;
  left: 40px;
  width: 32px;
  height: 0;
  transform: rotate(30deg);
}

.button__drow2 {
  top: 44px;
  left: 77px;
  width: 32px;
  height: 0;
  transform: rotate(-127deg);
}

.button__drow1::before,
.button__drow1::after,
.button__drow2::before,
.button__drow2::after {
  content: '';
  position: absolute;
}

.button__drow1::before {
  bottom: 0;
  left: 0;
  width: 0;
  height: 32px;
  border-radius: 16px;
  transform-origin: 16px 16px;
  transform: rotate(-60deg);
}

.button__drow1::after {
  top: -10px;
  left: 45px;
  width: 0;
  height: 32px;
  border-radius: 16px;
  transform-origin: 16px 16px;
  transform: rotate(69deg);
}

.button__drow2::before {
  bottom: 0;
  left: 0;
  width: 0;
  height: 32px;
  border-radius: 16px;
  transform-origin: 16px 16px;
  transform: rotate(-146deg);
}

.button__drow2::after {
  bottom: 26px;
  left: -40px;
  width: 0;
  height: 32px;
  border-radius: 16px;
  transform-origin: 16px 16px;
  transform: rotate(-262deg);
}

.button__drow1,
.button__drow1::before,
.button__drow1::after,
.button__drow2,
.button__drow2::before,
.button__drow2::after {
  background: var(--back_color);
}

.button:hover .button__drow1 {
  animation: drow1 ease-in .06s;
  animation-fill-mode: forwards;
}

.button:hover .button__drow1::before {
  animation: drow2 linear .08s .06s;
  animation-fill-mode: forwards;
}

.button:hover .button__drow1::after {
  animation: drow3 linear .03s .14s;
  animation-fill-mode: forwards;
}

.button:hover .button__drow2 {
  animation: drow4 linear .06s .2s;
  animation-fill-mode: forwards;
}

.button:hover .button__drow2::before {
  animation: drow3 linear .03s .26s;
  animation-fill-mode: forwards;
}

.button:hover .button__drow2::after {
  animation: drow5 linear .06s .32s;
  animation-fill-mode: forwards;
}

@keyframes drow1 {
  0% {
    height: 0;
  }

  100% {
    height: 100px;
  }
}

@keyframes drow2 {
  0% {
    width: 0;
    opacity: 0;
  }

  10% {
    opacity: 0;
  }

  11% {
    opacity: 1;
  }

  100% {
    width: 120px;
  }
}

@keyframes drow3 {
  0% {
    width: 0;
  }

  100% {
    width: 80px;
  }
}

@keyframes drow4 {
  0% {
    height: 0;
  }

  100% {
    height: 120px;
  }
}

@keyframes drow5 {
  0% {
    width: 0;
  }

  100% {
    width: 124px;
  }
}

/* 本体には関係ないスタイル */
.container {
  width: 100%;
  height: 300px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.button:not(:last-child) {
  margin-bottom: 64px;
}